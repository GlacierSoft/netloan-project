<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.netloan.dao.borrow.LoanReviewMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.netloan.entity.borrow.LoanReview" >
    <id column="temp_loan_review_loan_review_id" property="loanReviewId" jdbcType="VARCHAR" />
    <result column="temp_loan_review_loan_id" property="loanId" jdbcType="VARCHAR" />
    <result column="temp_loan_review_review_content" property="reviewContent" jdbcType="VARCHAR" />
    <result column="temp_loan_review_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_loan_review_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_loan_review_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_loan_review_loan_title" property="loanTitle" jdbcType="REAL"/> <!-- 自定义扩展字段 -->
    <result column="temp_loan_review_member_display" property="memberDisplay" jdbcType="REAL"/> <!-- 自定义扩展字段 -->
    <result column="temp_loan_review_member_photo" property="memberPhoto" jdbcType="REAL"/> <!-- 自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_loan_review.loan_review_id as temp_loan_review_loan_review_id, temp_loan_review.loan_id as temp_loan_review_loan_id, 
    temp_loan_review.review_content as temp_loan_review_review_content, temp_loan_review.remark as temp_loan_review_remark, 
    temp_loan_review.creater as temp_loan_review_creater, temp_loan_review.create_time as temp_loan_review_create_time
    <!-- 以下字段属于扩展 -->
    ,temp_borrowing_loan.loan_title as temp_loan_review_loan_title
    ,temp_creater.member_name as temp_loan_review_member_display
    ,temp_creater.member_photo as temp_loan_review_member_photo
  </sql>
  <sql id="Base_extend">
    LEFT JOIN t_borrowing_loan temp_borrowing_loan ON temp_borrowing_loan.loan_id = temp_loan_review.loan_id <!-- 扩展 -->
    LEFT JOIN t_member temp_creater ON temp_creater.member_id = temp_loan_review.creater <!-- 扩展 -->
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.netloan.entity.borrow.LoanReviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_loan_review temp_loan_review
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_loan_review temp_loan_review
    <include refid="Base_extend" />
    where temp_loan_review.loan_review_id = #{loanReviewId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_loan_review
    where loan_review_id = #{loanReviewId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.netloan.entity.borrow.LoanReviewExample" >
    delete temp_loan_review from t_loan_review temp_loan_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.netloan.entity.borrow.LoanReview" >
    insert into t_loan_review (loan_review_id, loan_id, review_content, 
      remark, creater, create_time
      )
    values (#{loanReviewId,jdbcType=VARCHAR}, #{loanId,jdbcType=VARCHAR}, #{reviewContent,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.netloan.entity.borrow.LoanReview" >
    insert into t_loan_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loanReviewId != null" >
        loan_review_id,
      </if>
      <if test="loanId != null" >
        loan_id,
      </if>
      <if test="reviewContent != null" >
        review_content,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loanReviewId != null" >
        #{loanReviewId,jdbcType=VARCHAR},
      </if>
      <if test="loanId != null" >
        #{loanId,jdbcType=VARCHAR},
      </if>
      <if test="reviewContent != null" >
        #{reviewContent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.netloan.entity.borrow.LoanReviewExample" resultType="java.lang.Integer" >
    select count(*) from t_loan_review temp_loan_review
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_loan_review temp_loan_review
    <set >
      <if test="record.loanReviewId != null" >
        temp_loan_review.loan_review_id = #{record.loanReviewId,jdbcType=VARCHAR},
      </if>
      <if test="record.loanId != null" >
        temp_loan_review.loan_id = #{record.loanId,jdbcType=VARCHAR},
      </if>
      <if test="record.reviewContent != null" >
        temp_loan_review.review_content = #{record.reviewContent,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        temp_loan_review.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_loan_review.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_loan_review.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_loan_review temp_loan_review
    set temp_loan_review.loan_review_id = #{record.loanReviewId,jdbcType=VARCHAR},
      temp_loan_review.loan_id = #{record.loanId,jdbcType=VARCHAR},
      temp_loan_review.review_content = #{record.reviewContent,jdbcType=VARCHAR},
      temp_loan_review.remark = #{record.remark,jdbcType=VARCHAR},
      temp_loan_review.creater = #{record.creater,jdbcType=VARCHAR},
      temp_loan_review.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.netloan.entity.borrow.LoanReview" >
    update t_loan_review
    <set >
      <if test="loanId != null" >
        loan_id = #{loanId,jdbcType=VARCHAR},
      </if>
      <if test="reviewContent != null" >
        review_content = #{reviewContent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where loan_review_id = #{loanReviewId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.netloan.entity.borrow.LoanReview" >
    update t_loan_review
    set loan_id = #{loanId,jdbcType=VARCHAR},
      review_content = #{reviewContent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where loan_review_id = #{loanReviewId,jdbcType=VARCHAR}
  </update>
</mapper>