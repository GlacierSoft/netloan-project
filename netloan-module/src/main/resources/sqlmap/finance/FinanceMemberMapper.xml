<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.netloan.dao.finance.FinanceMemberMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.netloan.entity.finance.FinanceMember" >
    <id column="temp_finance_member_finance_member_id" property="financeMemberId" jdbcType="VARCHAR" />
    <result column="temp_finance_member_bank_card_id" property="bankCardId" jdbcType="VARCHAR" />
    <result column="temp_finance_member_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_finance_member_usable_money" property="usableMoney" jdbcType="REAL" />
    <result column="temp_finance_member_frozen_money" property="frozenMoney" jdbcType="REAL" />
    <result column="temp_finance_member_collecting_money" property="collectingMoney" jdbcType="REAL" />
    <result column="temp_finance_member_refund_money" property="refundMoney" jdbcType="REAL" />
    <result column="temp_finance_member_amount" property="amount" jdbcType="REAL" />
    <result column="temp_finance_member_recharge_month_times" property="rechargeMonthTimes" jdbcType="REAL" />
    <result column="temp_finance_member_recharge_times" property="rechargeTimes" jdbcType="REAL" />
    <result column="temp_finance_member_recharge_money" property="rechargeMoney" jdbcType="REAL" />
    <result column="temp_finance_member_withdraw_month_times" property="withdrawMonthTimes" jdbcType="REAL" />
    <result column="temp_finance_member_withdraw_times" property="withdrawTimes" jdbcType="REAL" />
    <result column="temp_finance_member_withdraw_money" property="withdrawMoney" jdbcType="REAL" />
    <result column="temp_finance_member_borrower_credit" property="borrowerCredit" jdbcType="REAL" />
    <result column="temp_finance_member_available_credit" property="availableCredit" jdbcType="REAL" />
    <result column="temp_finance_member_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_finance_member_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_finance_member_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_finance_member_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_finance_member_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="temp_finance_member_member_display" property="memberDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_finance_member_bank_card_display" property="bankCardDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_finance_member_creater_display" property="createrDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_finance_member_updater_display" property="updaterDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_finance_member.finance_member_id as temp_finance_member_finance_member_id, temp_finance_member.bank_card_id as temp_finance_member_bank_card_id, 
    temp_finance_member.member_id as temp_finance_member_member_id, temp_finance_member.usable_money as temp_finance_member_usable_money, 
    temp_finance_member.frozen_money as temp_finance_member_frozen_money, temp_finance_member.collecting_money as temp_finance_member_collecting_money, 
    temp_finance_member.refund_money as temp_finance_member_refund_money, temp_finance_member.amount as temp_finance_member_amount, 
    temp_finance_member.recharge_month_times as temp_finance_member_recharge_month_times, 
    temp_finance_member.recharge_times as temp_finance_member_recharge_times, temp_finance_member.recharge_money as temp_finance_member_recharge_money, 
    temp_finance_member.withdraw_month_times as temp_finance_member_withdraw_month_times, 
    temp_finance_member.withdraw_times as temp_finance_member_withdraw_times, temp_finance_member.withdraw_money as temp_finance_member_withdraw_money, 
    temp_finance_member.borrower_credit as temp_finance_member_borrower_credit, temp_finance_member.available_credit as temp_finance_member_available_credit, 
    temp_finance_member.remark as temp_finance_member_remark, temp_finance_member.creater as temp_finance_member_creater, 
    temp_finance_member.create_time as temp_finance_member_create_time, temp_finance_member.updater as temp_finance_member_updater, 
    temp_finance_member.update_time as temp_finance_member_update_time
    <!-- 以下字段属于扩展 -->
  	,temp_member.member_real_name as temp_finance_member_member_display
    ,temp_bank_card.opening_bank as temp_finance_member_bank_card_display
    ,temp_creater.user_cn_name as temp_finance_member_creater_display
    ,temp_updater.user_cn_name as temp_finance_member_updater_display
  </sql>
  <sql id="Base_extend">
  	LEFT JOIN t_member temp_member ON temp_member.member_id = temp_finance_member.member_id <!-- 扩展 -->
  	LEFT JOIN t_finance_bank_card temp_bank_card ON temp_bank_card.bank_card_id = temp_finance_member.bank_card_id <!-- 扩展 -->
    LEFT JOIN t_user temp_creater ON temp_creater.user_id = temp_finance_member.creater <!-- 扩展 -->
    LEFT JOIN t_user temp_updater ON temp_updater.user_id = temp_finance_member.updater <!-- 扩展 -->
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.netloan.entity.finance.FinanceMemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_finance_member temp_finance_member
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_finance_member temp_finance_member
    <include refid="Base_extend" />
    where temp_finance_member.finance_member_id = #{financeMemberId,jdbcType=VARCHAR}
  </select>
  <!--自定义方法，根据会员Id查找该会员资金信息记录  -->
  <select id="selectByMemberId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_finance_member temp_finance_member
    <include refid="Base_extend" />
    where temp_finance_member.member_id = #{memberId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_finance_member
    where finance_member_id = #{financeMemberId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.netloan.entity.finance.FinanceMemberExample" >
    delete temp_finance_member from t_finance_member temp_finance_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.netloan.entity.finance.FinanceMember" >
    insert into t_finance_member (finance_member_id, bank_card_id, member_id, 
      usable_money, frozen_money, collecting_money, 
      refund_money, amount, recharge_month_times, 
      recharge_times, recharge_money, withdraw_month_times, 
      withdraw_times, withdraw_money, borrower_credit, 
      available_credit, remark, creater, 
      create_time, updater, update_time
      )
    values (#{financeMemberId,jdbcType=VARCHAR}, #{bankCardId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, 
      #{usableMoney,jdbcType=REAL}, #{frozenMoney,jdbcType=REAL}, #{collectingMoney,jdbcType=REAL}, 
      #{refundMoney,jdbcType=REAL}, #{amount,jdbcType=REAL}, #{rechargeMonthTimes,jdbcType=REAL}, 
      #{rechargeTimes,jdbcType=REAL}, #{rechargeMoney,jdbcType=REAL}, #{withdrawMonthTimes,jdbcType=REAL}, 
      #{withdrawTimes,jdbcType=REAL}, #{withdrawMoney,jdbcType=REAL}, #{borrowerCredit,jdbcType=REAL}, 
      #{availableCredit,jdbcType=REAL}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.netloan.entity.finance.FinanceMember" >
    insert into t_finance_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="financeMemberId != null" >
        finance_member_id,
      </if>
      <if test="bankCardId != null" >
        bank_card_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="usableMoney != null" >
        usable_money,
      </if>
      <if test="frozenMoney != null" >
        frozen_money,
      </if>
      <if test="collectingMoney != null" >
        collecting_money,
      </if>
      <if test="refundMoney != null" >
        refund_money,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="rechargeMonthTimes != null" >
        recharge_month_times,
      </if>
      <if test="rechargeTimes != null" >
        recharge_times,
      </if>
      <if test="rechargeMoney != null" >
        recharge_money,
      </if>
      <if test="withdrawMonthTimes != null" >
        withdraw_month_times,
      </if>
      <if test="withdrawTimes != null" >
        withdraw_times,
      </if>
      <if test="withdrawMoney != null" >
        withdraw_money,
      </if>
      <if test="borrowerCredit != null" >
        borrower_credit,
      </if>
      <if test="availableCredit != null" >
        available_credit,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="financeMemberId != null" >
        #{financeMemberId,jdbcType=VARCHAR},
      </if>
      <if test="bankCardId != null" >
        #{bankCardId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="usableMoney != null" >
        #{usableMoney,jdbcType=REAL},
      </if>
      <if test="frozenMoney != null" >
        #{frozenMoney,jdbcType=REAL},
      </if>
      <if test="collectingMoney != null" >
        #{collectingMoney,jdbcType=REAL},
      </if>
      <if test="refundMoney != null" >
        #{refundMoney,jdbcType=REAL},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=REAL},
      </if>
      <if test="rechargeMonthTimes != null" >
        #{rechargeMonthTimes,jdbcType=REAL},
      </if>
      <if test="rechargeTimes != null" >
        #{rechargeTimes,jdbcType=REAL},
      </if>
      <if test="rechargeMoney != null" >
        #{rechargeMoney,jdbcType=REAL},
      </if>
      <if test="withdrawMonthTimes != null" >
        #{withdrawMonthTimes,jdbcType=REAL},
      </if>
      <if test="withdrawTimes != null" >
        #{withdrawTimes,jdbcType=REAL},
      </if>
      <if test="withdrawMoney != null" >
        #{withdrawMoney,jdbcType=REAL},
      </if>
      <if test="borrowerCredit != null" >
        #{borrowerCredit,jdbcType=REAL},
      </if>
      <if test="availableCredit != null" >
        #{availableCredit,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.netloan.entity.finance.FinanceMemberExample" resultType="java.lang.Integer" >
    select count(*) from t_finance_member temp_finance_member
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_finance_member temp_finance_member
    <set >
      <if test="record.financeMemberId != null" >
        temp_finance_member.finance_member_id = #{record.financeMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCardId != null" >
        temp_finance_member.bank_card_id = #{record.bankCardId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        temp_finance_member.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.usableMoney != null" >
        temp_finance_member.usable_money = #{record.usableMoney,jdbcType=REAL},
      </if>
      <if test="record.frozenMoney != null" >
        temp_finance_member.frozen_money = #{record.frozenMoney,jdbcType=REAL},
      </if>
      <if test="record.collectingMoney != null" >
        temp_finance_member.collecting_money = #{record.collectingMoney,jdbcType=REAL},
      </if>
      <if test="record.refundMoney != null" >
        temp_finance_member.refund_money = #{record.refundMoney,jdbcType=REAL},
      </if>
      <if test="record.amount != null" >
        temp_finance_member.amount = #{record.amount,jdbcType=REAL},
      </if>
      <if test="record.rechargeMonthTimes != null" >
        temp_finance_member.recharge_month_times = #{record.rechargeMonthTimes,jdbcType=REAL},
      </if>
      <if test="record.rechargeTimes != null" >
        temp_finance_member.recharge_times = #{record.rechargeTimes,jdbcType=REAL},
      </if>
      <if test="record.rechargeMoney != null" >
        temp_finance_member.recharge_money = #{record.rechargeMoney,jdbcType=REAL},
      </if>
      <if test="record.withdrawMonthTimes != null" >
        temp_finance_member.withdraw_month_times = #{record.withdrawMonthTimes,jdbcType=REAL},
      </if>
      <if test="record.withdrawTimes != null" >
        temp_finance_member.withdraw_times = #{record.withdrawTimes,jdbcType=REAL},
      </if>
      <if test="record.withdrawMoney != null" >
        temp_finance_member.withdraw_money = #{record.withdrawMoney,jdbcType=REAL},
      </if>
      <if test="record.borrowerCredit != null" >
        temp_finance_member.borrower_credit = #{record.borrowerCredit,jdbcType=REAL},
      </if>
      <if test="record.availableCredit != null" >
        temp_finance_member.available_credit = #{record.availableCredit,jdbcType=REAL},
      </if>
      <if test="record.remark != null" >
        temp_finance_member.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_finance_member.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_finance_member.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_finance_member.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_finance_member.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_finance_member temp_finance_member
    set temp_finance_member.finance_member_id = #{record.financeMemberId,jdbcType=VARCHAR},
      temp_finance_member.bank_card_id = #{record.bankCardId,jdbcType=VARCHAR},
      temp_finance_member.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_finance_member.usable_money = #{record.usableMoney,jdbcType=REAL},
      temp_finance_member.frozen_money = #{record.frozenMoney,jdbcType=REAL},
      temp_finance_member.collecting_money = #{record.collectingMoney,jdbcType=REAL},
      temp_finance_member.refund_money = #{record.refundMoney,jdbcType=REAL},
      temp_finance_member.amount = #{record.amount,jdbcType=REAL},
      temp_finance_member.recharge_month_times = #{record.rechargeMonthTimes,jdbcType=REAL},
      temp_finance_member.recharge_times = #{record.rechargeTimes,jdbcType=REAL},
      temp_finance_member.recharge_money = #{record.rechargeMoney,jdbcType=REAL},
      temp_finance_member.withdraw_month_times = #{record.withdrawMonthTimes,jdbcType=REAL},
      temp_finance_member.withdraw_times = #{record.withdrawTimes,jdbcType=REAL},
      temp_finance_member.withdraw_money = #{record.withdrawMoney,jdbcType=REAL},
      temp_finance_member.borrower_credit = #{record.borrowerCredit,jdbcType=REAL},
      temp_finance_member.available_credit = #{record.availableCredit,jdbcType=REAL},
      temp_finance_member.remark = #{record.remark,jdbcType=VARCHAR},
      temp_finance_member.creater = #{record.creater,jdbcType=VARCHAR},
      temp_finance_member.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_finance_member.updater = #{record.updater,jdbcType=VARCHAR},
      temp_finance_member.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.netloan.entity.finance.FinanceMember" >
    update t_finance_member
    <set >
      <if test="bankCardId != null" >
        bank_card_id = #{bankCardId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="usableMoney != null" >
        usable_money = #{usableMoney,jdbcType=REAL},
      </if>
      <if test="frozenMoney != null" >
        frozen_money = #{frozenMoney,jdbcType=REAL},
      </if>
      <if test="collectingMoney != null" >
        collecting_money = #{collectingMoney,jdbcType=REAL},
      </if>
      <if test="refundMoney != null" >
        refund_money = #{refundMoney,jdbcType=REAL},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=REAL},
      </if>
      <if test="rechargeMonthTimes != null" >
        recharge_month_times = #{rechargeMonthTimes,jdbcType=REAL},
      </if>
      <if test="rechargeTimes != null" >
        recharge_times = #{rechargeTimes,jdbcType=REAL},
      </if>
      <if test="rechargeMoney != null" >
        recharge_money = #{rechargeMoney,jdbcType=REAL},
      </if>
      <if test="withdrawMonthTimes != null" >
        withdraw_month_times = #{withdrawMonthTimes,jdbcType=REAL},
      </if>
      <if test="withdrawTimes != null" >
        withdraw_times = #{withdrawTimes,jdbcType=REAL},
      </if>
      <if test="withdrawMoney != null" >
        withdraw_money = #{withdrawMoney,jdbcType=REAL},
      </if>
      <if test="borrowerCredit != null" >
        borrower_credit = #{borrowerCredit,jdbcType=REAL},
      </if>
      <if test="availableCredit != null" >
        available_credit = #{availableCredit,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where finance_member_id = #{financeMemberId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.netloan.entity.finance.FinanceMember" >
    update t_finance_member
    set bank_card_id = #{bankCardId,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=VARCHAR},
      usable_money = #{usableMoney,jdbcType=REAL},
      frozen_money = #{frozenMoney,jdbcType=REAL},
      collecting_money = #{collectingMoney,jdbcType=REAL},
      refund_money = #{refundMoney,jdbcType=REAL},
      amount = #{amount,jdbcType=REAL},
      recharge_month_times = #{rechargeMonthTimes,jdbcType=REAL},
      recharge_times = #{rechargeTimes,jdbcType=REAL},
      recharge_money = #{rechargeMoney,jdbcType=REAL},
      withdraw_month_times = #{withdrawMonthTimes,jdbcType=REAL},
      withdraw_times = #{withdrawTimes,jdbcType=REAL},
      withdraw_money = #{withdrawMoney,jdbcType=REAL},
      borrower_credit = #{borrowerCredit,jdbcType=REAL},
      available_credit = #{availableCredit,jdbcType=REAL},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where finance_member_id = #{financeMemberId,jdbcType=VARCHAR}
  </update>
</mapper>