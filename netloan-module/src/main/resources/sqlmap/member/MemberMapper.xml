<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.netloan.dao.member.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.netloan.entity.member.Member" >
    <id column="temp_member_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_member_member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="temp_member_member_password" property="memberPassword" jdbcType="VARCHAR" />
    <result column="temp_member_member_real_name" property="memberRealName" jdbcType="VARCHAR" />
    <result column="temp_member_member_age" property="memberAge" jdbcType="INTEGER" />
    <result column="temp_member_mobile_number" property="mobileNumber" jdbcType="VARCHAR" />
    <result column="temp_member_sex" property="sex" jdbcType="CHAR" />
    <result column="temp_member_marital_status" property="maritalStatus" jdbcType="VARCHAR" />
    <result column="temp_member_card_id" property="cardId" jdbcType="VARCHAR" />
    <result column="temp_member_email" property="email" jdbcType="VARCHAR" />
    <result column="temp_member_email_auth" property="emailAuth" jdbcType="CHAR" />
    <result column="temp_member_credit" property="credit" jdbcType="VARCHAR" />
    <result column="temp_member_mobile_auth" property="mobileAuth" jdbcType="CHAR" />
    <result column="temp_member_company_auth" property="companyAuth" jdbcType="CHAR" />
    <result column="temp_member_real_name_auth" property="realNameAuth" jdbcType="CHAR" />
    <result column="temp_member_id_auth" property="idAuth" jdbcType="CHAR" />
    <result column="temp_member_work_auth" property="workAuth" jdbcType="CHAR" />
    <result column="temp_member_vip_auth" property="vipAuth" jdbcType="CHAR" />
    <result column="temp_member_member_profile_audit" property="memberProfileAudit" jdbcType="CHAR" />
    <result column="temp_member_registration_time" property="registrationTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_member_type" property="memberType" jdbcType="VARCHAR" />
    <result column="temp_member_valid_vip_time" property="validVipTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_expire_vip_time" property="expireVipTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_attachment" property="attachment" jdbcType="VARCHAR" />
    <result column="temp_member_educational_background" property="educationalBackground" jdbcType="VARCHAR" />
    <result column="temp_member_salary" property="salary" jdbcType="REAL" />
    <result column="temp_member_personal_description" property="personalDescription" jdbcType="VARCHAR" />
    <result column="temp_member_hometown" property="hometown" jdbcType="VARCHAR" />
    <result column="temp_member_live_address" property="liveAddress" jdbcType="VARCHAR" />
    <result column="temp_member_home_phone" property="homePhone" jdbcType="VARCHAR" />
    <result column="temp_member_first_contact" property="firstContact" jdbcType="VARCHAR" />
    <result column="temp_member_first_contact_relation" property="firstContactRelation" jdbcType="CHAR" />
    <result column="temp_member_first_contact_phone" property="firstContactPhone" jdbcType="VARCHAR" />
    <result column="temp_member_first_contact_address" property="firstContactAddress" jdbcType="VARCHAR" />
    <result column="temp_member_second_contact" property="secondContact" jdbcType="VARCHAR" />
    <result column="temp_member_second_contact_relation" property="secondContactRelation" jdbcType="CHAR" />
    <result column="temp_member_second_contact_phone" property="secondContactPhone" jdbcType="VARCHAR" />
    <result column="temp_member_second_contact_address" property="secondContactAddress" jdbcType="VARCHAR" />
    <result column="temp_member_unit_name" property="unitName" jdbcType="VARCHAR" />
    <result column="temp_member_unit_phone" property="unitPhone" jdbcType="VARCHAR" />
    <result column="temp_member_unit_adress" property="unitAdress" jdbcType="VARCHAR" />
    <result column="temp_member_work_age" property="workAge" jdbcType="INTEGER" />
    <result column="temp_member_proof_person" property="proofPerson" jdbcType="VARCHAR" />
    <result column="temp_member_proof_person_phone" property="proofPersonPhone" jdbcType="VARCHAR" />
    <result column="temp_member_freeze" property="freeze" jdbcType="CHAR" />
    <result column="temp_member_customer_type" property="customerType" jdbcType="CHAR" />
    <result column="temp_member_customer_service" property="customerService" jdbcType="VARCHAR" />
    <result column="temp_member_investment_credits" property="investmentCredits" jdbcType="INTEGER" />
    <result column="temp_member_bank_id" property="bankId" jdbcType="VARCHAR" />
    <result column="temp_member_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_member_creater_time" property="createrTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_member_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_member.member_id as temp_member_member_id, temp_member.member_name as temp_member_member_name, 
    temp_member.member_password as temp_member_member_password, temp_member.member_real_name as temp_member_member_real_name, 
    temp_member.member_age as temp_member_member_age, temp_member.mobile_number as temp_member_mobile_number, 
    temp_member.sex as temp_member_sex, temp_member.marital_status as temp_member_marital_status, 
    temp_member.card_id as temp_member_card_id, temp_member.email as temp_member_email, 
    temp_member.email_auth as temp_member_email_auth, temp_member.credit as temp_member_credit, 
    temp_member.mobile_auth as temp_member_mobile_auth, temp_member.company_auth as temp_member_company_auth, 
    temp_member.real_name_auth as temp_member_real_name_auth, temp_member.id_auth as temp_member_id_auth, 
    temp_member.work_auth as temp_member_work_auth, temp_member.vip_auth as temp_member_vip_auth, 
    temp_member.member_profile_audit as temp_member_member_profile_audit, temp_member.registration_time as temp_member_registration_time, 
    temp_member.member_type as temp_member_member_type, temp_member.valid_vip_time as temp_member_valid_vip_time, 
    temp_member.expire_vip_time as temp_member_expire_vip_time, temp_member.attachment as temp_member_attachment, 
    temp_member.educational_background as temp_member_educational_background, temp_member.salary as temp_member_salary, 
    temp_member.personal_description as temp_member_personal_description, temp_member.hometown as temp_member_hometown, 
    temp_member.live_address as temp_member_live_address, temp_member.home_phone as temp_member_home_phone, 
    temp_member.first_contact as temp_member_first_contact, temp_member.first_contact_relation as temp_member_first_contact_relation, 
    temp_member.first_contact_phone as temp_member_first_contact_phone, temp_member.first_contact_address as temp_member_first_contact_address, 
    temp_member.second_contact as temp_member_second_contact, temp_member.second_contact_relation as temp_member_second_contact_relation, 
    temp_member.second_contact_phone as temp_member_second_contact_phone, temp_member.second_contact_address as temp_member_second_contact_address, 
    temp_member.unit_name as temp_member_unit_name, temp_member.unit_phone as temp_member_unit_phone, 
    temp_member.unit_adress as temp_member_unit_adress, temp_member.work_age as temp_member_work_age, 
    temp_member.proof_person as temp_member_proof_person, temp_member.proof_person_phone as temp_member_proof_person_phone, 
    temp_member.freeze as temp_member_freeze, temp_member.customer_type as temp_member_customer_type, 
    temp_member.customer_service as temp_member_customer_service, temp_member.investment_credits as temp_member_investment_credits, 
    temp_member.bank_id as temp_member_bank_id, temp_member.creater as temp_member_creater, 
    temp_member.creater_time as temp_member_creater_time, temp_member.updater as temp_member_updater, 
    temp_member.update_time as temp_member_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.netloan.entity.member.MemberExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member temp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_member temp_member
    where temp_member.member_id = #{memberId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_member
    where member_id = #{memberId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.netloan.entity.member.MemberExample" >
    delete from t_member temp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.netloan.entity.member.Member" >
    insert into t_member (member_id, member_name, member_password, 
      member_real_name, member_age, mobile_number, 
      sex, marital_status, card_id, 
      email, email_auth, credit, 
      mobile_auth, company_auth, real_name_auth, 
      id_auth, work_auth, vip_auth, member_profile_audit, 
      registration_time, member_type, valid_vip_time, 
      expire_vip_time, attachment, educational_background, 
      salary, personal_description, hometown, 
      live_address, home_phone, first_contact, 
      first_contact_relation, first_contact_phone, first_contact_address, 
      second_contact, second_contact_relation, second_contact_phone, 
      second_contact_address, unit_name, unit_phone, 
      unit_adress, work_age, proof_person, 
      proof_person_phone, freeze, customer_type, 
      customer_service, investment_credits, bank_id, 
      creater, creater_time, updater, 
      update_time)
    values (#{memberId,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, #{memberPassword,jdbcType=VARCHAR}, 
      #{memberRealName,jdbcType=VARCHAR}, #{memberAge,jdbcType=INTEGER}, #{mobileNumber,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{maritalStatus,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{emailAuth,jdbcType=CHAR}, #{credit,jdbcType=VARCHAR}, 
      #{mobileAuth,jdbcType=CHAR}, #{companyAuth,jdbcType=CHAR}, #{realNameAuth,jdbcType=CHAR}, 
      #{idAuth,jdbcType=CHAR}, #{workAuth,jdbcType=CHAR}, #{vipAuth,jdbcType=CHAR}, #{memberProfileAudit,jdbcType=CHAR}, 
      #{registrationTime,jdbcType=TIMESTAMP}, #{memberType,jdbcType=VARCHAR}, #{validVipTime,jdbcType=TIMESTAMP}, 
      #{expireVipTime,jdbcType=TIMESTAMP}, #{attachment,jdbcType=VARCHAR}, #{educationalBackground,jdbcType=VARCHAR}, 
      #{salary,jdbcType=REAL}, #{personalDescription,jdbcType=VARCHAR}, #{hometown,jdbcType=VARCHAR}, 
      #{liveAddress,jdbcType=VARCHAR}, #{homePhone,jdbcType=VARCHAR}, #{firstContact,jdbcType=VARCHAR}, 
      #{firstContactRelation,jdbcType=CHAR}, #{firstContactPhone,jdbcType=VARCHAR}, #{firstContactAddress,jdbcType=VARCHAR}, 
      #{secondContact,jdbcType=VARCHAR}, #{secondContactRelation,jdbcType=CHAR}, #{secondContactPhone,jdbcType=VARCHAR}, 
      #{secondContactAddress,jdbcType=VARCHAR}, #{unitName,jdbcType=VARCHAR}, #{unitPhone,jdbcType=VARCHAR}, 
      #{unitAdress,jdbcType=VARCHAR}, #{workAge,jdbcType=INTEGER}, #{proofPerson,jdbcType=VARCHAR}, 
      #{proofPersonPhone,jdbcType=VARCHAR}, #{freeze,jdbcType=CHAR}, #{customerType,jdbcType=CHAR}, 
      #{customerService,jdbcType=VARCHAR}, #{investmentCredits,jdbcType=INTEGER}, #{bankId,jdbcType=VARCHAR}, 
      #{creater,jdbcType=VARCHAR}, #{createrTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.netloan.entity.member.Member" >
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="memberPassword != null" >
        member_password,
      </if>
      <if test="memberRealName != null" >
        member_real_name,
      </if>
      <if test="memberAge != null" >
        member_age,
      </if>
      <if test="mobileNumber != null" >
        mobile_number,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="maritalStatus != null" >
        marital_status,
      </if>
      <if test="cardId != null" >
        card_id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="emailAuth != null" >
        email_auth,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="mobileAuth != null" >
        mobile_auth,
      </if>
      <if test="companyAuth != null" >
        company_auth,
      </if>
      <if test="realNameAuth != null" >
        real_name_auth,
      </if>
      <if test="idAuth != null" >
        id_auth,
      </if>
      <if test="workAuth != null" >
        work_auth,
      </if>
      <if test="vipAuth != null" >
        vip_auth,
      </if>
      <if test="memberProfileAudit != null" >
        member_profile_audit,
      </if>
      <if test="registrationTime != null" >
        registration_time,
      </if>
      <if test="memberType != null" >
        member_type,
      </if>
      <if test="validVipTime != null" >
        valid_vip_time,
      </if>
      <if test="expireVipTime != null" >
        expire_vip_time,
      </if>
      <if test="attachment != null" >
        attachment,
      </if>
      <if test="educationalBackground != null" >
        educational_background,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="personalDescription != null" >
        personal_description,
      </if>
      <if test="hometown != null" >
        hometown,
      </if>
      <if test="liveAddress != null" >
        live_address,
      </if>
      <if test="homePhone != null" >
        home_phone,
      </if>
      <if test="firstContact != null" >
        first_contact,
      </if>
      <if test="firstContactRelation != null" >
        first_contact_relation,
      </if>
      <if test="firstContactPhone != null" >
        first_contact_phone,
      </if>
      <if test="firstContactAddress != null" >
        first_contact_address,
      </if>
      <if test="secondContact != null" >
        second_contact,
      </if>
      <if test="secondContactRelation != null" >
        second_contact_relation,
      </if>
      <if test="secondContactPhone != null" >
        second_contact_phone,
      </if>
      <if test="secondContactAddress != null" >
        second_contact_address,
      </if>
      <if test="unitName != null" >
        unit_name,
      </if>
      <if test="unitPhone != null" >
        unit_phone,
      </if>
      <if test="unitAdress != null" >
        unit_adress,
      </if>
      <if test="workAge != null" >
        work_age,
      </if>
      <if test="proofPerson != null" >
        proof_person,
      </if>
      <if test="proofPersonPhone != null" >
        proof_person_phone,
      </if>
      <if test="freeze != null" >
        freeze,
      </if>
      <if test="customerType != null" >
        customer_type,
      </if>
      <if test="customerService != null" >
        customer_service,
      </if>
      <if test="investmentCredits != null" >
        investment_credits,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createrTime != null" >
        creater_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberPassword != null" >
        #{memberPassword,jdbcType=VARCHAR},
      </if>
      <if test="memberRealName != null" >
        #{memberRealName,jdbcType=VARCHAR},
      </if>
      <if test="memberAge != null" >
        #{memberAge,jdbcType=INTEGER},
      </if>
      <if test="mobileNumber != null" >
        #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="maritalStatus != null" >
        #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailAuth != null" >
        #{emailAuth,jdbcType=CHAR},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="mobileAuth != null" >
        #{mobileAuth,jdbcType=CHAR},
      </if>
      <if test="companyAuth != null" >
        #{companyAuth,jdbcType=CHAR},
      </if>
      <if test="realNameAuth != null" >
        #{realNameAuth,jdbcType=CHAR},
      </if>
      <if test="idAuth != null" >
        #{idAuth,jdbcType=CHAR},
      </if>
      <if test="workAuth != null" >
        #{workAuth,jdbcType=CHAR},
      </if>
      <if test="vipAuth != null" >
        #{vipAuth,jdbcType=CHAR},
      </if>
      <if test="memberProfileAudit != null" >
        #{memberProfileAudit,jdbcType=CHAR},
      </if>
      <if test="registrationTime != null" >
        #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberType != null" >
        #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="validVipTime != null" >
        #{validVipTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireVipTime != null" >
        #{expireVipTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attachment != null" >
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="educationalBackground != null" >
        #{educationalBackground,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=REAL},
      </if>
      <if test="personalDescription != null" >
        #{personalDescription,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null" >
        #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="liveAddress != null" >
        #{liveAddress,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null" >
        #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="firstContact != null" >
        #{firstContact,jdbcType=VARCHAR},
      </if>
      <if test="firstContactRelation != null" >
        #{firstContactRelation,jdbcType=CHAR},
      </if>
      <if test="firstContactPhone != null" >
        #{firstContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="firstContactAddress != null" >
        #{firstContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="secondContact != null" >
        #{secondContact,jdbcType=VARCHAR},
      </if>
      <if test="secondContactRelation != null" >
        #{secondContactRelation,jdbcType=CHAR},
      </if>
      <if test="secondContactPhone != null" >
        #{secondContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="secondContactAddress != null" >
        #{secondContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null" >
        #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="unitPhone != null" >
        #{unitPhone,jdbcType=VARCHAR},
      </if>
      <if test="unitAdress != null" >
        #{unitAdress,jdbcType=VARCHAR},
      </if>
      <if test="workAge != null" >
        #{workAge,jdbcType=INTEGER},
      </if>
      <if test="proofPerson != null" >
        #{proofPerson,jdbcType=VARCHAR},
      </if>
      <if test="proofPersonPhone != null" >
        #{proofPersonPhone,jdbcType=VARCHAR},
      </if>
      <if test="freeze != null" >
        #{freeze,jdbcType=CHAR},
      </if>
      <if test="customerType != null" >
        #{customerType,jdbcType=CHAR},
      </if>
      <if test="customerService != null" >
        #{customerService,jdbcType=VARCHAR},
      </if>
      <if test="investmentCredits != null" >
        #{investmentCredits,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null" >
        #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.netloan.entity.member.MemberExample" resultType="java.lang.Integer" >
    select count(*) from t_member temp_member
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_member temp_member
    <set >
      <if test="record.memberId != null" >
        temp_member.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberName != null" >
        temp_member.member_name = #{record.memberName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberPassword != null" >
        temp_member.member_password = #{record.memberPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.memberRealName != null" >
        temp_member.member_real_name = #{record.memberRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.memberAge != null" >
        temp_member.member_age = #{record.memberAge,jdbcType=INTEGER},
      </if>
      <if test="record.mobileNumber != null" >
        temp_member.mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        temp_member.sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.maritalStatus != null" >
        temp_member.marital_status = #{record.maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null" >
        temp_member.card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        temp_member.email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAuth != null" >
        temp_member.email_auth = #{record.emailAuth,jdbcType=CHAR},
      </if>
      <if test="record.credit != null" >
        temp_member.credit = #{record.credit,jdbcType=VARCHAR},
      </if>
      <if test="record.mobileAuth != null" >
        temp_member.mobile_auth = #{record.mobileAuth,jdbcType=CHAR},
      </if>
      <if test="record.companyAuth != null" >
        temp_member.company_auth = #{record.companyAuth,jdbcType=CHAR},
      </if>
      <if test="record.realNameAuth != null" >
        temp_member.real_name_auth = #{record.realNameAuth,jdbcType=CHAR},
      </if>
      <if test="record.idAuth != null" >
        temp_member.id_auth = #{record.idAuth,jdbcType=CHAR},
      </if>
      <if test="record.workAuth != null" >
        temp_member.work_auth = #{record.workAuth,jdbcType=CHAR},
      </if>
      <if test="record.vipAuth != null" >
        temp_member.vip_auth = #{record.vipAuth,jdbcType=CHAR},
      </if>
      <if test="record.memberProfileAudit != null" >
        temp_member.member_profile_audit = #{record.memberProfileAudit,jdbcType=CHAR},
      </if>
      <if test="record.registrationTime != null" >
        temp_member.registration_time = #{record.registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.memberType != null" >
        temp_member.member_type = #{record.memberType,jdbcType=VARCHAR},
      </if>
      <if test="record.validVipTime != null" >
        temp_member.valid_vip_time = #{record.validVipTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireVipTime != null" >
        temp_member.expire_vip_time = #{record.expireVipTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attachment != null" >
        temp_member.attachment = #{record.attachment,jdbcType=VARCHAR},
      </if>
      <if test="record.educationalBackground != null" >
        temp_member.educational_background = #{record.educationalBackground,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null" >
        temp_member.salary = #{record.salary,jdbcType=REAL},
      </if>
      <if test="record.personalDescription != null" >
        temp_member.personal_description = #{record.personalDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.hometown != null" >
        temp_member.hometown = #{record.hometown,jdbcType=VARCHAR},
      </if>
      <if test="record.liveAddress != null" >
        temp_member.live_address = #{record.liveAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.homePhone != null" >
        temp_member.home_phone = #{record.homePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.firstContact != null" >
        temp_member.first_contact = #{record.firstContact,jdbcType=VARCHAR},
      </if>
      <if test="record.firstContactRelation != null" >
        temp_member.first_contact_relation = #{record.firstContactRelation,jdbcType=CHAR},
      </if>
      <if test="record.firstContactPhone != null" >
        temp_member.first_contact_phone = #{record.firstContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.firstContactAddress != null" >
        temp_member.first_contact_address = #{record.firstContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.secondContact != null" >
        temp_member.second_contact = #{record.secondContact,jdbcType=VARCHAR},
      </if>
      <if test="record.secondContactRelation != null" >
        temp_member.second_contact_relation = #{record.secondContactRelation,jdbcType=CHAR},
      </if>
      <if test="record.secondContactPhone != null" >
        temp_member.second_contact_phone = #{record.secondContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.secondContactAddress != null" >
        temp_member.second_contact_address = #{record.secondContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.unitName != null" >
        temp_member.unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPhone != null" >
        temp_member.unit_phone = #{record.unitPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.unitAdress != null" >
        temp_member.unit_adress = #{record.unitAdress,jdbcType=VARCHAR},
      </if>
      <if test="record.workAge != null" >
        temp_member.work_age = #{record.workAge,jdbcType=INTEGER},
      </if>
      <if test="record.proofPerson != null" >
        temp_member.proof_person = #{record.proofPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.proofPersonPhone != null" >
        temp_member.proof_person_phone = #{record.proofPersonPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.freeze != null" >
        temp_member.freeze = #{record.freeze,jdbcType=CHAR},
      </if>
      <if test="record.customerType != null" >
        temp_member.customer_type = #{record.customerType,jdbcType=CHAR},
      </if>
      <if test="record.customerService != null" >
        temp_member.customer_service = #{record.customerService,jdbcType=VARCHAR},
      </if>
      <if test="record.investmentCredits != null" >
        temp_member.investment_credits = #{record.investmentCredits,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null" >
        temp_member.bank_id = #{record.bankId,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_member.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createrTime != null" >
        temp_member.creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_member.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_member.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_member temp_member
    set temp_member.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_member.member_name = #{record.memberName,jdbcType=VARCHAR},
      temp_member.member_password = #{record.memberPassword,jdbcType=VARCHAR},
      temp_member.member_real_name = #{record.memberRealName,jdbcType=VARCHAR},
      temp_member.member_age = #{record.memberAge,jdbcType=INTEGER},
      temp_member.mobile_number = #{record.mobileNumber,jdbcType=VARCHAR},
      temp_member.sex = #{record.sex,jdbcType=CHAR},
      temp_member.marital_status = #{record.maritalStatus,jdbcType=VARCHAR},
      temp_member.card_id = #{record.cardId,jdbcType=VARCHAR},
      temp_member.email = #{record.email,jdbcType=VARCHAR},
      temp_member.email_auth = #{record.emailAuth,jdbcType=CHAR},
      temp_member.credit = #{record.credit,jdbcType=VARCHAR},
      temp_member.mobile_auth = #{record.mobileAuth,jdbcType=CHAR},
      temp_member.company_auth = #{record.companyAuth,jdbcType=CHAR},
      temp_member.real_name_auth = #{record.realNameAuth,jdbcType=CHAR},
      temp_member.id_auth = #{record.idAuth,jdbcType=CHAR},
      temp_member.work_auth = #{record.workAuth,jdbcType=CHAR},
      temp_member.vip_auth = #{record.vipAuth,jdbcType=CHAR},
      temp_member.member_profile_audit = #{record.memberProfileAudit,jdbcType=CHAR},
      temp_member.registration_time = #{record.registrationTime,jdbcType=TIMESTAMP},
      temp_member.member_type = #{record.memberType,jdbcType=VARCHAR},
      temp_member.valid_vip_time = #{record.validVipTime,jdbcType=TIMESTAMP},
      temp_member.expire_vip_time = #{record.expireVipTime,jdbcType=TIMESTAMP},
      temp_member.attachment = #{record.attachment,jdbcType=VARCHAR},
      temp_member.educational_background = #{record.educationalBackground,jdbcType=VARCHAR},
      temp_member.salary = #{record.salary,jdbcType=REAL},
      temp_member.personal_description = #{record.personalDescription,jdbcType=VARCHAR},
      temp_member.hometown = #{record.hometown,jdbcType=VARCHAR},
      temp_member.live_address = #{record.liveAddress,jdbcType=VARCHAR},
      temp_member.home_phone = #{record.homePhone,jdbcType=VARCHAR},
      temp_member.first_contact = #{record.firstContact,jdbcType=VARCHAR},
      temp_member.first_contact_relation = #{record.firstContactRelation,jdbcType=CHAR},
      temp_member.first_contact_phone = #{record.firstContactPhone,jdbcType=VARCHAR},
      temp_member.first_contact_address = #{record.firstContactAddress,jdbcType=VARCHAR},
      temp_member.second_contact = #{record.secondContact,jdbcType=VARCHAR},
      temp_member.second_contact_relation = #{record.secondContactRelation,jdbcType=CHAR},
      temp_member.second_contact_phone = #{record.secondContactPhone,jdbcType=VARCHAR},
      temp_member.second_contact_address = #{record.secondContactAddress,jdbcType=VARCHAR},
      temp_member.unit_name = #{record.unitName,jdbcType=VARCHAR},
      temp_member.unit_phone = #{record.unitPhone,jdbcType=VARCHAR},
      temp_member.unit_adress = #{record.unitAdress,jdbcType=VARCHAR},
      temp_member.work_age = #{record.workAge,jdbcType=INTEGER},
      temp_member.proof_person = #{record.proofPerson,jdbcType=VARCHAR},
      temp_member.proof_person_phone = #{record.proofPersonPhone,jdbcType=VARCHAR},
      temp_member.freeze = #{record.freeze,jdbcType=CHAR},
      temp_member.customer_type = #{record.customerType,jdbcType=CHAR},
      temp_member.customer_service = #{record.customerService,jdbcType=VARCHAR},
      temp_member.investment_credits = #{record.investmentCredits,jdbcType=INTEGER},
      temp_member.bank_id = #{record.bankId,jdbcType=VARCHAR},
      temp_member.creater = #{record.creater,jdbcType=VARCHAR},
      temp_member.creater_time = #{record.createrTime,jdbcType=TIMESTAMP},
      temp_member.updater = #{record.updater,jdbcType=VARCHAR},
      temp_member.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.netloan.entity.member.Member" >
    update t_member
    <set >
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberPassword != null" >
        member_password = #{memberPassword,jdbcType=VARCHAR},
      </if>
      <if test="memberRealName != null" >
        member_real_name = #{memberRealName,jdbcType=VARCHAR},
      </if>
      <if test="memberAge != null" >
        member_age = #{memberAge,jdbcType=INTEGER},
      </if>
      <if test="mobileNumber != null" >
        mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="maritalStatus != null" >
        marital_status = #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="emailAuth != null" >
        email_auth = #{emailAuth,jdbcType=CHAR},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="mobileAuth != null" >
        mobile_auth = #{mobileAuth,jdbcType=CHAR},
      </if>
      <if test="companyAuth != null" >
        company_auth = #{companyAuth,jdbcType=CHAR},
      </if>
      <if test="realNameAuth != null" >
        real_name_auth = #{realNameAuth,jdbcType=CHAR},
      </if>
      <if test="idAuth != null" >
        id_auth = #{idAuth,jdbcType=CHAR},
      </if>
      <if test="workAuth != null" >
        work_auth = #{workAuth,jdbcType=CHAR},
      </if>
      <if test="vipAuth != null" >
        vip_auth = #{vipAuth,jdbcType=CHAR},
      </if>
      <if test="memberProfileAudit != null" >
        member_profile_audit = #{memberProfileAudit,jdbcType=CHAR},
      </if>
      <if test="registrationTime != null" >
        registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberType != null" >
        member_type = #{memberType,jdbcType=VARCHAR},
      </if>
      <if test="validVipTime != null" >
        valid_vip_time = #{validVipTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireVipTime != null" >
        expire_vip_time = #{expireVipTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attachment != null" >
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="educationalBackground != null" >
        educational_background = #{educationalBackground,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=REAL},
      </if>
      <if test="personalDescription != null" >
        personal_description = #{personalDescription,jdbcType=VARCHAR},
      </if>
      <if test="hometown != null" >
        hometown = #{hometown,jdbcType=VARCHAR},
      </if>
      <if test="liveAddress != null" >
        live_address = #{liveAddress,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null" >
        home_phone = #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="firstContact != null" >
        first_contact = #{firstContact,jdbcType=VARCHAR},
      </if>
      <if test="firstContactRelation != null" >
        first_contact_relation = #{firstContactRelation,jdbcType=CHAR},
      </if>
      <if test="firstContactPhone != null" >
        first_contact_phone = #{firstContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="firstContactAddress != null" >
        first_contact_address = #{firstContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="secondContact != null" >
        second_contact = #{secondContact,jdbcType=VARCHAR},
      </if>
      <if test="secondContactRelation != null" >
        second_contact_relation = #{secondContactRelation,jdbcType=CHAR},
      </if>
      <if test="secondContactPhone != null" >
        second_contact_phone = #{secondContactPhone,jdbcType=VARCHAR},
      </if>
      <if test="secondContactAddress != null" >
        second_contact_address = #{secondContactAddress,jdbcType=VARCHAR},
      </if>
      <if test="unitName != null" >
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="unitPhone != null" >
        unit_phone = #{unitPhone,jdbcType=VARCHAR},
      </if>
      <if test="unitAdress != null" >
        unit_adress = #{unitAdress,jdbcType=VARCHAR},
      </if>
      <if test="workAge != null" >
        work_age = #{workAge,jdbcType=INTEGER},
      </if>
      <if test="proofPerson != null" >
        proof_person = #{proofPerson,jdbcType=VARCHAR},
      </if>
      <if test="proofPersonPhone != null" >
        proof_person_phone = #{proofPersonPhone,jdbcType=VARCHAR},
      </if>
      <if test="freeze != null" >
        freeze = #{freeze,jdbcType=CHAR},
      </if>
      <if test="customerType != null" >
        customer_type = #{customerType,jdbcType=CHAR},
      </if>
      <if test="customerService != null" >
        customer_service = #{customerService,jdbcType=VARCHAR},
      </if>
      <if test="investmentCredits != null" >
        investment_credits = #{investmentCredits,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createrTime != null" >
        creater_time = #{createrTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.netloan.entity.member.Member" >
    update t_member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_password = #{memberPassword,jdbcType=VARCHAR},
      member_real_name = #{memberRealName,jdbcType=VARCHAR},
      member_age = #{memberAge,jdbcType=INTEGER},
      mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      marital_status = #{maritalStatus,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      email_auth = #{emailAuth,jdbcType=CHAR},
      credit = #{credit,jdbcType=VARCHAR},
      mobile_auth = #{mobileAuth,jdbcType=CHAR},
      company_auth = #{companyAuth,jdbcType=CHAR},
      real_name_auth = #{realNameAuth,jdbcType=CHAR},
      id_auth = #{idAuth,jdbcType=CHAR},
      work_auth = #{workAuth,jdbcType=CHAR},
      vip_auth = #{vipAuth,jdbcType=CHAR},
      member_profile_audit = #{memberProfileAudit,jdbcType=CHAR},
      registration_time = #{registrationTime,jdbcType=TIMESTAMP},
      member_type = #{memberType,jdbcType=VARCHAR},
      valid_vip_time = #{validVipTime,jdbcType=TIMESTAMP},
      expire_vip_time = #{expireVipTime,jdbcType=TIMESTAMP},
      attachment = #{attachment,jdbcType=VARCHAR},
      educational_background = #{educationalBackground,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=REAL},
      personal_description = #{personalDescription,jdbcType=VARCHAR},
      hometown = #{hometown,jdbcType=VARCHAR},
      live_address = #{liveAddress,jdbcType=VARCHAR},
      home_phone = #{homePhone,jdbcType=VARCHAR},
      first_contact = #{firstContact,jdbcType=VARCHAR},
      first_contact_relation = #{firstContactRelation,jdbcType=CHAR},
      first_contact_phone = #{firstContactPhone,jdbcType=VARCHAR},
      first_contact_address = #{firstContactAddress,jdbcType=VARCHAR},
      second_contact = #{secondContact,jdbcType=VARCHAR},
      second_contact_relation = #{secondContactRelation,jdbcType=CHAR},
      second_contact_phone = #{secondContactPhone,jdbcType=VARCHAR},
      second_contact_address = #{secondContactAddress,jdbcType=VARCHAR},
      unit_name = #{unitName,jdbcType=VARCHAR},
      unit_phone = #{unitPhone,jdbcType=VARCHAR},
      unit_adress = #{unitAdress,jdbcType=VARCHAR},
      work_age = #{workAge,jdbcType=INTEGER},
      proof_person = #{proofPerson,jdbcType=VARCHAR},
      proof_person_phone = #{proofPersonPhone,jdbcType=VARCHAR},
      freeze = #{freeze,jdbcType=CHAR},
      customer_type = #{customerType,jdbcType=CHAR},
      customer_service = #{customerService,jdbcType=VARCHAR},
      investment_credits = #{investmentCredits,jdbcType=INTEGER},
      bank_id = #{bankId,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      creater_time = #{createrTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where member_id = #{memberId,jdbcType=VARCHAR}
  </update>
</mapper>