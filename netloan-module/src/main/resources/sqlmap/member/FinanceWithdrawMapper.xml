<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.netloan.dao.member.FinanceWithdrawMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.netloan.entity.member.FinanceWithdraw" >
    <id column="temp_finance_withdraw_finance_withdraw_id" property="financeWithdrawId" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_opening_bank" property="openingBank" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_subbranch" property="subbranch" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_card_name" property="cardName" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_card_number" property="cardNumber" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_withdraw_amount" property="withdrawAmount" jdbcType="REAL" />
    <result column="temp_finance_withdraw_arrive_money" property="arriveMoney" jdbcType="REAL" />
    <result column="temp_finance_withdraw_handling_charge" property="handlingCharge" jdbcType="REAL" />
    <result column="temp_finance_withdraw_withdraw_rate" property="withdrawRate" jdbcType="REAL" />
    <result column="temp_finance_withdraw_status" property="status" jdbcType="CHAR" />
    <result column="temp_finance_withdraw_auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="temp_finance_withdraw_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_finance_withdraw_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_finance_withdraw_update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_finance_withdraw.finance_withdraw_id as temp_finance_withdraw_finance_withdraw_id, 
    temp_finance_withdraw.member_id as temp_finance_withdraw_member_id, temp_finance_withdraw.opening_bank as temp_finance_withdraw_opening_bank, 
    temp_finance_withdraw.subbranch as temp_finance_withdraw_subbranch, temp_finance_withdraw.card_name as temp_finance_withdraw_card_name, 
    temp_finance_withdraw.card_number as temp_finance_withdraw_card_number, temp_finance_withdraw.withdraw_amount as temp_finance_withdraw_withdraw_amount, 
    temp_finance_withdraw.arrive_money as temp_finance_withdraw_arrive_money, temp_finance_withdraw.handling_charge as temp_finance_withdraw_handling_charge, 
    temp_finance_withdraw.withdraw_rate as temp_finance_withdraw_withdraw_rate, temp_finance_withdraw.status as temp_finance_withdraw_status, 
    temp_finance_withdraw.auditor as temp_finance_withdraw_auditor, temp_finance_withdraw.audit_date as temp_finance_withdraw_audit_date, 
    temp_finance_withdraw.remark as temp_finance_withdraw_remark, temp_finance_withdraw.creater as temp_finance_withdraw_creater, 
    temp_finance_withdraw.create_time as temp_finance_withdraw_create_time, temp_finance_withdraw.updater as temp_finance_withdraw_updater, 
    temp_finance_withdraw.update_time as temp_finance_withdraw_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.netloan.entity.member.FinanceWithdrawExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_finance_withdraw temp_finance_withdraw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_finance_withdraw temp_finance_withdraw
    where temp_finance_withdraw.finance_withdraw_id = #{financeWithdrawId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_finance_withdraw
    where finance_withdraw_id = #{financeWithdrawId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.netloan.entity.member.FinanceWithdrawExample" >
    delete from t_finance_withdraw temp_finance_withdraw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.netloan.entity.member.FinanceWithdraw" >
    insert into t_finance_withdraw (finance_withdraw_id, member_id, opening_bank, 
      subbranch, card_name, card_number, 
      withdraw_amount, arrive_money, handling_charge, 
      withdraw_rate, status, auditor, 
      audit_date, remark, creater, 
      create_time, updater, update_time
      )
    values (#{financeWithdrawId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{openingBank,jdbcType=VARCHAR}, 
      #{subbranch,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, 
      #{withdrawAmount,jdbcType=REAL}, #{arriveMoney,jdbcType=REAL}, #{handlingCharge,jdbcType=REAL}, 
      #{withdrawRate,jdbcType=REAL}, #{status,jdbcType=CHAR}, #{auditor,jdbcType=VARCHAR}, 
      #{auditDate,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.netloan.entity.member.FinanceWithdraw" >
    insert into t_finance_withdraw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="financeWithdrawId != null" >
        finance_withdraw_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="openingBank != null" >
        opening_bank,
      </if>
      <if test="subbranch != null" >
        subbranch,
      </if>
      <if test="cardName != null" >
        card_name,
      </if>
      <if test="cardNumber != null" >
        card_number,
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount,
      </if>
      <if test="arriveMoney != null" >
        arrive_money,
      </if>
      <if test="handlingCharge != null" >
        handling_charge,
      </if>
      <if test="withdrawRate != null" >
        withdraw_rate,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="auditor != null" >
        auditor,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="financeWithdrawId != null" >
        #{financeWithdrawId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="openingBank != null" >
        #{openingBank,jdbcType=VARCHAR},
      </if>
      <if test="subbranch != null" >
        #{subbranch,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null" >
        #{withdrawAmount,jdbcType=REAL},
      </if>
      <if test="arriveMoney != null" >
        #{arriveMoney,jdbcType=REAL},
      </if>
      <if test="handlingCharge != null" >
        #{handlingCharge,jdbcType=REAL},
      </if>
      <if test="withdrawRate != null" >
        #{withdrawRate,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.netloan.entity.member.FinanceWithdrawExample" resultType="java.lang.Integer" >
    select count(*) from t_finance_withdraw temp_finance_withdraw
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_finance_withdraw temp_finance_withdraw
    <set >
      <if test="record.financeWithdrawId != null" >
        temp_finance_withdraw.finance_withdraw_id = #{record.financeWithdrawId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        temp_finance_withdraw.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.openingBank != null" >
        temp_finance_withdraw.opening_bank = #{record.openingBank,jdbcType=VARCHAR},
      </if>
      <if test="record.subbranch != null" >
        temp_finance_withdraw.subbranch = #{record.subbranch,jdbcType=VARCHAR},
      </if>
      <if test="record.cardName != null" >
        temp_finance_withdraw.card_name = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNumber != null" >
        temp_finance_withdraw.card_number = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.withdrawAmount != null" >
        temp_finance_withdraw.withdraw_amount = #{record.withdrawAmount,jdbcType=REAL},
      </if>
      <if test="record.arriveMoney != null" >
        temp_finance_withdraw.arrive_money = #{record.arriveMoney,jdbcType=REAL},
      </if>
      <if test="record.handlingCharge != null" >
        temp_finance_withdraw.handling_charge = #{record.handlingCharge,jdbcType=REAL},
      </if>
      <if test="record.withdrawRate != null" >
        temp_finance_withdraw.withdraw_rate = #{record.withdrawRate,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        temp_finance_withdraw.status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.auditor != null" >
        temp_finance_withdraw.auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditDate != null" >
        temp_finance_withdraw.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        temp_finance_withdraw.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_finance_withdraw.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_finance_withdraw.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_finance_withdraw.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_finance_withdraw.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_finance_withdraw temp_finance_withdraw
    set temp_finance_withdraw.finance_withdraw_id = #{record.financeWithdrawId,jdbcType=VARCHAR},
      temp_finance_withdraw.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_finance_withdraw.opening_bank = #{record.openingBank,jdbcType=VARCHAR},
      temp_finance_withdraw.subbranch = #{record.subbranch,jdbcType=VARCHAR},
      temp_finance_withdraw.card_name = #{record.cardName,jdbcType=VARCHAR},
      temp_finance_withdraw.card_number = #{record.cardNumber,jdbcType=VARCHAR},
      temp_finance_withdraw.withdraw_amount = #{record.withdrawAmount,jdbcType=REAL},
      temp_finance_withdraw.arrive_money = #{record.arriveMoney,jdbcType=REAL},
      temp_finance_withdraw.handling_charge = #{record.handlingCharge,jdbcType=REAL},
      temp_finance_withdraw.withdraw_rate = #{record.withdrawRate,jdbcType=REAL},
      temp_finance_withdraw.status = #{record.status,jdbcType=CHAR},
      temp_finance_withdraw.auditor = #{record.auditor,jdbcType=VARCHAR},
      temp_finance_withdraw.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      temp_finance_withdraw.remark = #{record.remark,jdbcType=VARCHAR},
      temp_finance_withdraw.creater = #{record.creater,jdbcType=VARCHAR},
      temp_finance_withdraw.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_finance_withdraw.updater = #{record.updater,jdbcType=VARCHAR},
      temp_finance_withdraw.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.netloan.entity.member.FinanceWithdraw" >
    update t_finance_withdraw
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="openingBank != null" >
        opening_bank = #{openingBank,jdbcType=VARCHAR},
      </if>
      <if test="subbranch != null" >
        subbranch = #{subbranch,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null" >
        card_name = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="cardNumber != null" >
        card_number = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount = #{withdrawAmount,jdbcType=REAL},
      </if>
      <if test="arriveMoney != null" >
        arrive_money = #{arriveMoney,jdbcType=REAL},
      </if>
      <if test="handlingCharge != null" >
        handling_charge = #{handlingCharge,jdbcType=REAL},
      </if>
      <if test="withdrawRate != null" >
        withdraw_rate = #{withdrawRate,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where finance_withdraw_id = #{financeWithdrawId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.netloan.entity.member.FinanceWithdraw" >
    update t_finance_withdraw
    set member_id = #{memberId,jdbcType=VARCHAR},
      opening_bank = #{openingBank,jdbcType=VARCHAR},
      subbranch = #{subbranch,jdbcType=VARCHAR},
      card_name = #{cardName,jdbcType=VARCHAR},
      card_number = #{cardNumber,jdbcType=VARCHAR},
      withdraw_amount = #{withdrawAmount,jdbcType=REAL},
      arrive_money = #{arriveMoney,jdbcType=REAL},
      handling_charge = #{handlingCharge,jdbcType=REAL},
      withdraw_rate = #{withdrawRate,jdbcType=REAL},
      status = #{status,jdbcType=CHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where finance_withdraw_id = #{financeWithdrawId,jdbcType=VARCHAR}
  </update>
</mapper>