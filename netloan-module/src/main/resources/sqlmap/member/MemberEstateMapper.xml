<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.netloan.dao.member.MemberEstateMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.netloan.entity.member.MemberEstate" >
    <id column="temp_member_estate_estate_id" property="estateId" jdbcType="VARCHAR" />
    <result column="temp_member_estate_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_member_estate_address" property="address" jdbcType="VARCHAR" />
    <result column="temp_member_estate_area" property="area" jdbcType="REAL" />
    <result column="temp_member_estate_year_built" property="yearBuilt" jdbcType="TIMESTAMP" />
    <result column="temp_member_estate_age_expenses" property="ageExpenses" jdbcType="CHAR" />
    <result column="temp_member_estate_first_owner" property="firstOwner" jdbcType="VARCHAR" />
    <result column="temp_member_estate_second_owner" property="secondOwner" jdbcType="VARCHAR" />
    <result column="temp_member_estate_loan_period" property="loanPeriod" jdbcType="TIMESTAMP" />
    <result column="temp_member_estate_month_contributions" property="monthContributions" jdbcType="REAL" />
    <result column="temp_member_estate_outstand_balances" property="outstandBalances" jdbcType="REAL" />
    <result column="temp_member_estate_mortgage_bank" property="mortgageBank" jdbcType="VARCHAR" />
    <result column="temp_member_estate_audit_state" property="auditState" jdbcType="CHAR" />
    <result column="temp_member_estate_auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="temp_member_estate_audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="temp_member_estate_audit_remark" property="auditRemark" jdbcType="VARCHAR" />
    <result column="temp_member_estate_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_member_estate_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_member_estate_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_estate_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_member_estate_update_time" property="updateTime" jdbcType="TIMESTAMP" />
	<result column="temp_member_estate_memberRealName" property="memberRealName" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
	<result column="temp_member_estate_auditorDisplay" property="auditorDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_estate_createrDisplay" property="createrDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_estate_updaterDisplay" property="updaterDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_member_estate.estate_id as temp_member_estate_estate_id, temp_member_estate.member_id as temp_member_estate_member_id, 
    temp_member_estate.address as temp_member_estate_address, temp_member_estate.area as temp_member_estate_area, 
    temp_member_estate.year_built as temp_member_estate_year_built, temp_member_estate.age_expenses as temp_member_estate_age_expenses, 
    temp_member_estate.first_owner as temp_member_estate_first_owner, temp_member_estate.second_owner as temp_member_estate_second_owner, 
    temp_member_estate.loan_period as temp_member_estate_loan_period, temp_member_estate.month_contributions as temp_member_estate_month_contributions, 
    temp_member_estate.outstand_balances as temp_member_estate_outstand_balances, temp_member_estate.mortgage_bank as temp_member_estate_mortgage_bank, 
    temp_member_estate.audit_state as temp_member_estate_audit_state, temp_member_estate.auditor as temp_member_estate_auditor, 
    temp_member_estate.audit_date as temp_member_estate_audit_date, temp_member_estate.audit_remark as temp_member_estate_audit_remark, 
    temp_member_estate.remark as temp_member_estate_remark, temp_member_estate.creater as temp_member_estate_creater, 
    temp_member_estate.create_time as temp_member_estate_create_time, temp_member_estate.updater as temp_member_estate_updater, 
    temp_member_estate.update_time as temp_member_estate_update_time
	<!-- 以下字段属于扩展 -->
    ,temp_member.member_real_name as temp_member_estate_memberRealName
    ,temp_auditor.user_cn_name as temp_member_estate_auditorDisplay
	,temp_creater.user_cn_name as temp_member_estate_createrDisplay
    ,temp_updater.user_cn_name as temp_member_estate_updaterDisplay
  </sql>
  <sql id="Base_extend">
  	INNER JOIN t_member temp_member ON temp_member_estate.member_id =  temp_member.member_id<!-- 扩展 -->
	INNER JOIN t_user temp_auditor ON temp_member_estate.auditor =  temp_auditor.user_id<!-- 扩展 -->
    INNER JOIN t_user temp_creater ON temp_member_estate.creater =  temp_creater.user_id<!-- 扩展 -->
    INNER JOIN t_user temp_updater ON temp_member_estate.updater =  temp_updater.user_id<!-- 扩展 -->
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.netloan.entity.member.MemberEstateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member_estate temp_member_estate
	<include refid="Base_extend"/>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_member_estate temp_member_estate
	<include refid="Base_extend"/>
    where temp_member_estate.estate_id = #{estateId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_member_estate
    where estate_id = #{estateId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.netloan.entity.member.MemberEstateExample" >
    delete temp_member_estate from t_member_estate temp_member_estate
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.netloan.entity.member.MemberEstate" >
    insert into t_member_estate (estate_id, member_id, address, 
      area, year_built, age_expenses, 
      first_owner, second_owner, loan_period, 
      month_contributions, outstand_balances, mortgage_bank, 
      audit_state, auditor, audit_date, 
      audit_remark, remark, creater, 
      create_time, updater, update_time
      )
    values (#{estateId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{area,jdbcType=REAL}, #{yearBuilt,jdbcType=TIMESTAMP}, #{ageExpenses,jdbcType=CHAR}, 
      #{firstOwner,jdbcType=VARCHAR}, #{secondOwner,jdbcType=VARCHAR}, #{loanPeriod,jdbcType=TIMESTAMP}, 
      #{monthContributions,jdbcType=REAL}, #{outstandBalances,jdbcType=REAL}, #{mortgageBank,jdbcType=VARCHAR}, 
      #{auditState,jdbcType=CHAR}, #{auditor,jdbcType=VARCHAR}, #{auditDate,jdbcType=TIMESTAMP}, 
      #{auditRemark,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.netloan.entity.member.MemberEstate" >
    insert into t_member_estate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="estateId != null" >
        estate_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="yearBuilt != null" >
        year_built,
      </if>
      <if test="ageExpenses != null" >
        age_expenses,
      </if>
      <if test="firstOwner != null" >
        first_owner,
      </if>
      <if test="secondOwner != null" >
        second_owner,
      </if>
      <if test="loanPeriod != null" >
        loan_period,
      </if>
      <if test="monthContributions != null" >
        month_contributions,
      </if>
      <if test="outstandBalances != null" >
        outstand_balances,
      </if>
      <if test="mortgageBank != null" >
        mortgage_bank,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditor != null" >
        auditor,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="auditRemark != null" >
        audit_remark,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="estateId != null" >
        #{estateId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        #{area,jdbcType=REAL},
      </if>
      <if test="yearBuilt != null" >
        #{yearBuilt,jdbcType=TIMESTAMP},
      </if>
      <if test="ageExpenses != null" >
        #{ageExpenses,jdbcType=CHAR},
      </if>
      <if test="firstOwner != null" >
        #{firstOwner,jdbcType=VARCHAR},
      </if>
      <if test="secondOwner != null" >
        #{secondOwner,jdbcType=VARCHAR},
      </if>
      <if test="loanPeriod != null" >
        #{loanPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="monthContributions != null" >
        #{monthContributions,jdbcType=REAL},
      </if>
      <if test="outstandBalances != null" >
        #{outstandBalances,jdbcType=REAL},
      </if>
      <if test="mortgageBank != null" >
        #{mortgageBank,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null" >
        #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.netloan.entity.member.MemberEstateExample" resultType="java.lang.Integer" >
    select count(*) from t_member_estate temp_member_estate
	<include refid="Base_extend"/>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_member_estate temp_member_estate
    <set >
      <if test="record.estateId != null" >
        temp_member_estate.estate_id = #{record.estateId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        temp_member_estate.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        temp_member_estate.address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null" >
        temp_member_estate.area = #{record.area,jdbcType=REAL},
      </if>
      <if test="record.yearBuilt != null" >
        temp_member_estate.year_built = #{record.yearBuilt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ageExpenses != null" >
        temp_member_estate.age_expenses = #{record.ageExpenses,jdbcType=CHAR},
      </if>
      <if test="record.firstOwner != null" >
        temp_member_estate.first_owner = #{record.firstOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.secondOwner != null" >
        temp_member_estate.second_owner = #{record.secondOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.loanPeriod != null" >
        temp_member_estate.loan_period = #{record.loanPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="record.monthContributions != null" >
        temp_member_estate.month_contributions = #{record.monthContributions,jdbcType=REAL},
      </if>
      <if test="record.outstandBalances != null" >
        temp_member_estate.outstand_balances = #{record.outstandBalances,jdbcType=REAL},
      </if>
      <if test="record.mortgageBank != null" >
        temp_member_estate.mortgage_bank = #{record.mortgageBank,jdbcType=VARCHAR},
      </if>
      <if test="record.auditState != null" >
        temp_member_estate.audit_state = #{record.auditState,jdbcType=CHAR},
      </if>
      <if test="record.auditor != null" >
        temp_member_estate.auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditDate != null" >
        temp_member_estate.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditRemark != null" >
        temp_member_estate.audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        temp_member_estate.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_member_estate.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_member_estate.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_member_estate.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_member_estate.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_member_estate temp_member_estate
    set temp_member_estate.estate_id = #{record.estateId,jdbcType=VARCHAR},
      temp_member_estate.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_member_estate.address = #{record.address,jdbcType=VARCHAR},
      temp_member_estate.area = #{record.area,jdbcType=REAL},
      temp_member_estate.year_built = #{record.yearBuilt,jdbcType=TIMESTAMP},
      temp_member_estate.age_expenses = #{record.ageExpenses,jdbcType=CHAR},
      temp_member_estate.first_owner = #{record.firstOwner,jdbcType=VARCHAR},
      temp_member_estate.second_owner = #{record.secondOwner,jdbcType=VARCHAR},
      temp_member_estate.loan_period = #{record.loanPeriod,jdbcType=TIMESTAMP},
      temp_member_estate.month_contributions = #{record.monthContributions,jdbcType=REAL},
      temp_member_estate.outstand_balances = #{record.outstandBalances,jdbcType=REAL},
      temp_member_estate.mortgage_bank = #{record.mortgageBank,jdbcType=VARCHAR},
      temp_member_estate.audit_state = #{record.auditState,jdbcType=CHAR},
      temp_member_estate.auditor = #{record.auditor,jdbcType=VARCHAR},
      temp_member_estate.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      temp_member_estate.audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      temp_member_estate.remark = #{record.remark,jdbcType=VARCHAR},
      temp_member_estate.creater = #{record.creater,jdbcType=VARCHAR},
      temp_member_estate.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_member_estate.updater = #{record.updater,jdbcType=VARCHAR},
      temp_member_estate.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.netloan.entity.member.MemberEstate" >
    update t_member_estate
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=REAL},
      </if>
      <if test="yearBuilt != null" >
        year_built = #{yearBuilt,jdbcType=TIMESTAMP},
      </if>
      <if test="ageExpenses != null" >
        age_expenses = #{ageExpenses,jdbcType=CHAR},
      </if>
      <if test="firstOwner != null" >
        first_owner = #{firstOwner,jdbcType=VARCHAR},
      </if>
      <if test="secondOwner != null" >
        second_owner = #{secondOwner,jdbcType=VARCHAR},
      </if>
      <if test="loanPeriod != null" >
        loan_period = #{loanPeriod,jdbcType=TIMESTAMP},
      </if>
      <if test="monthContributions != null" >
        month_contributions = #{monthContributions,jdbcType=REAL},
      </if>
      <if test="outstandBalances != null" >
        outstand_balances = #{outstandBalances,jdbcType=REAL},
      </if>
      <if test="mortgageBank != null" >
        mortgage_bank = #{mortgageBank,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null" >
        audit_state = #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null" >
        audit_remark = #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where estate_id = #{estateId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.netloan.entity.member.MemberEstate" >
    update t_member_estate
    set member_id = #{memberId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      area = #{area,jdbcType=REAL},
      year_built = #{yearBuilt,jdbcType=TIMESTAMP},
      age_expenses = #{ageExpenses,jdbcType=CHAR},
      first_owner = #{firstOwner,jdbcType=VARCHAR},
      second_owner = #{secondOwner,jdbcType=VARCHAR},
      loan_period = #{loanPeriod,jdbcType=TIMESTAMP},
      month_contributions = #{monthContributions,jdbcType=REAL},
      outstand_balances = #{outstandBalances,jdbcType=REAL},
      mortgage_bank = #{mortgageBank,jdbcType=VARCHAR},
      audit_state = #{auditState,jdbcType=CHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      audit_remark = #{auditRemark,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where estate_id = #{estateId,jdbcType=VARCHAR}
  </update>
</mapper>