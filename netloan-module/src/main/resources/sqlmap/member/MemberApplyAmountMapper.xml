<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.netloan.dao.member.MemberApplyAmountMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.netloan.entity.member.MemberApplyAmount" >
    <id column="temp_member_apply_amount_apply_amount_id" property="applyAmountId" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_member_id" property="memberId" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_apply_type" property="applyType" jdbcType="CHAR" />
    <result column="temp_member_apply_amount_original_amount" property="originalAmount" jdbcType="REAL" />
    <result column="temp_member_apply_amount_apply_money" property="applyMoney" jdbcType="REAL" />
    <result column="temp_member_apply_amount_apply_explanation" property="applyExplanation" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_authorized_amount" property="authorizedAmount" jdbcType="REAL" />
    <result column="temp_member_apply_amount_audit_state" property="auditState" jdbcType="CHAR" />
    <result column="temp_member_apply_amount_process_explanation" property="processExplanation" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_apply_date" property="applyDate" jdbcType="TIMESTAMP" />
    <result column="temp_member_apply_amount_auditor_id" property="auditorId" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="temp_member_apply_amount_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_apply_amount_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_member_apply_amount_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="temp_member_apply_amount_memberRealName" property="memberRealName" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_apply_amount_auditorDisplay" property="auditorDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_apply_amount_createrDisplay" property="createrDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
    <result column="temp_member_apply_amount_updaterDisplay" property="updaterDisplay" jdbcType="VARCHAR"/> <!-- 自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_member_apply_amount.apply_amount_id as temp_member_apply_amount_apply_amount_id, 
    temp_member_apply_amount.member_id as temp_member_apply_amount_member_id, temp_member_apply_amount.apply_type as temp_member_apply_amount_apply_type, 
    temp_member_apply_amount.original_amount as temp_member_apply_amount_original_amount, 
    temp_member_apply_amount.apply_money as temp_member_apply_amount_apply_money, temp_member_apply_amount.apply_explanation as temp_member_apply_amount_apply_explanation, 
    temp_member_apply_amount.authorized_amount as temp_member_apply_amount_authorized_amount, 
    temp_member_apply_amount.audit_state as temp_member_apply_amount_audit_state, temp_member_apply_amount.process_explanation as temp_member_apply_amount_process_explanation, 
    temp_member_apply_amount.apply_date as temp_member_apply_amount_apply_date, temp_member_apply_amount.auditor_id as temp_member_apply_amount_auditor_id, 
    temp_member_apply_amount.audit_date as temp_member_apply_amount_audit_date, temp_member_apply_amount.remark as temp_member_apply_amount_remark, 
    temp_member_apply_amount.creater as temp_member_apply_amount_creater, temp_member_apply_amount.create_time as temp_member_apply_amount_create_time, 
    temp_member_apply_amount.updater as temp_member_apply_amount_updater, temp_member_apply_amount.update_time as temp_member_apply_amount_update_time
  	<!-- 以下字段属于扩展 -->
    ,temp_member.member_real_name as temp_member_apply_amount_memberRealName
    ,temp_auditor.user_cn_name as temp_member_apply_amount_auditorDisplay
    ,temp_creater.user_cn_name as temp_member_apply_amount_createrDisplay
    ,temp_updater.user_cn_name as temp_member_apply_amount_updaterDisplay
  </sql>
  <sql id="Base_extend">
  	INNER JOIN t_member temp_member ON temp_member_apply_amount.member_id =  temp_member.member_id<!-- 扩展 -->
  	LEFT JOIN t_user temp_auditor ON temp_member_apply_amount.auditor_id =  temp_auditor.user_id<!-- 扩展 -->
    INNER JOIN t_user temp_creater ON temp_member_apply_amount.creater =  temp_creater.user_id<!-- 扩展 -->
    INNER JOIN t_user temp_updater ON temp_member_apply_amount.updater =  temp_updater.user_id<!-- 扩展 -->
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.netloan.entity.member.MemberApplyAmountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member_apply_amount temp_member_apply_amount
    <include refid="Base_extend"/>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_member_apply_amount temp_member_apply_amount
    <include refid="Base_extend"/>
    where temp_member_apply_amount.apply_amount_id = #{applyAmountId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_member_apply_amount
    where apply_amount_id = #{applyAmountId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.netloan.entity.member.MemberApplyAmountExample" >
    delete from t_member_apply_amount temp_member_apply_amount
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.netloan.entity.member.MemberApplyAmount" >
    insert into t_member_apply_amount (apply_amount_id, member_id, apply_type, 
      original_amount, apply_money, apply_explanation, 
      authorized_amount, audit_state, process_explanation, 
      apply_date, auditor_id, audit_date, 
      remark, creater, create_time, 
      updater, update_time)
    values (#{applyAmountId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{applyType,jdbcType=CHAR}, 
      #{originalAmount,jdbcType=REAL}, #{applyMoney,jdbcType=REAL}, #{applyExplanation,jdbcType=VARCHAR}, 
      #{authorizedAmount,jdbcType=REAL}, #{auditState,jdbcType=CHAR}, #{processExplanation,jdbcType=VARCHAR}, 
      #{applyDate,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=VARCHAR}, #{auditDate,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.netloan.entity.member.MemberApplyAmount" >
    insert into t_member_apply_amount
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyAmountId != null" >
        apply_amount_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="applyType != null" >
        apply_type,
      </if>
      <if test="originalAmount != null" >
        original_amount,
      </if>
      <if test="applyMoney != null" >
        apply_money,
      </if>
      <if test="applyExplanation != null" >
        apply_explanation,
      </if>
      <if test="authorizedAmount != null" >
        authorized_amount,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="processExplanation != null" >
        process_explanation,
      </if>
      <if test="applyDate != null" >
        apply_date,
      </if>
      <if test="auditorId != null" >
        auditor_id,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applyAmountId != null" >
        #{applyAmountId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null" >
        #{applyType,jdbcType=CHAR},
      </if>
      <if test="originalAmount != null" >
        #{originalAmount,jdbcType=REAL},
      </if>
      <if test="applyMoney != null" >
        #{applyMoney,jdbcType=REAL},
      </if>
      <if test="applyExplanation != null" >
        #{applyExplanation,jdbcType=VARCHAR},
      </if>
      <if test="authorizedAmount != null" >
        #{authorizedAmount,jdbcType=REAL},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="processExplanation != null" >
        #{processExplanation,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        #{auditorId,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.netloan.entity.member.MemberApplyAmountExample" resultType="java.lang.Integer" >
    select count(*) from t_member_apply_amount temp_member_apply_amount
    <include refid="Base_extend"/>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_member_apply_amount temp_member_apply_amount
    <set >
      <if test="record.applyAmountId != null" >
        temp_member_apply_amount.apply_amount_id = #{record.applyAmountId,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null" >
        temp_member_apply_amount.member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyType != null" >
        temp_member_apply_amount.apply_type = #{record.applyType,jdbcType=CHAR},
      </if>
      <if test="record.originalAmount != null" >
        temp_member_apply_amount.original_amount = #{record.originalAmount,jdbcType=REAL},
      </if>
      <if test="record.applyMoney != null" >
        temp_member_apply_amount.apply_money = #{record.applyMoney,jdbcType=REAL},
      </if>
      <if test="record.applyExplanation != null" >
        temp_member_apply_amount.apply_explanation = #{record.applyExplanation,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizedAmount != null" >
        temp_member_apply_amount.authorized_amount = #{record.authorizedAmount,jdbcType=REAL},
      </if>
      <if test="record.auditState != null" >
        temp_member_apply_amount.audit_state = #{record.auditState,jdbcType=CHAR},
      </if>
      <if test="record.processExplanation != null" >
        temp_member_apply_amount.process_explanation = #{record.processExplanation,jdbcType=VARCHAR},
      </if>
      <if test="record.applyDate != null" >
        temp_member_apply_amount.apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditorId != null" >
        temp_member_apply_amount.auditor_id = #{record.auditorId,jdbcType=VARCHAR},
      </if>
      <if test="record.auditDate != null" >
        temp_member_apply_amount.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        temp_member_apply_amount.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_member_apply_amount.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_member_apply_amount.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_member_apply_amount.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_member_apply_amount.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_member_apply_amount temp_member_apply_amount
    set temp_member_apply_amount.apply_amount_id = #{record.applyAmountId,jdbcType=VARCHAR},
      temp_member_apply_amount.member_id = #{record.memberId,jdbcType=VARCHAR},
      temp_member_apply_amount.apply_type = #{record.applyType,jdbcType=CHAR},
      temp_member_apply_amount.original_amount = #{record.originalAmount,jdbcType=REAL},
      temp_member_apply_amount.apply_money = #{record.applyMoney,jdbcType=REAL},
      temp_member_apply_amount.apply_explanation = #{record.applyExplanation,jdbcType=VARCHAR},
      temp_member_apply_amount.authorized_amount = #{record.authorizedAmount,jdbcType=REAL},
      temp_member_apply_amount.audit_state = #{record.auditState,jdbcType=CHAR},
      temp_member_apply_amount.process_explanation = #{record.processExplanation,jdbcType=VARCHAR},
      temp_member_apply_amount.apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      temp_member_apply_amount.auditor_id = #{record.auditorId,jdbcType=VARCHAR},
      temp_member_apply_amount.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      temp_member_apply_amount.remark = #{record.remark,jdbcType=VARCHAR},
      temp_member_apply_amount.creater = #{record.creater,jdbcType=VARCHAR},
      temp_member_apply_amount.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_member_apply_amount.updater = #{record.updater,jdbcType=VARCHAR},
      temp_member_apply_amount.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.netloan.entity.member.MemberApplyAmount" >
    update t_member_apply_amount
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null" >
        apply_type = #{applyType,jdbcType=CHAR},
      </if>
      <if test="originalAmount != null" >
        original_amount = #{originalAmount,jdbcType=REAL},
      </if>
      <if test="applyMoney != null" >
        apply_money = #{applyMoney,jdbcType=REAL},
      </if>
      <if test="applyExplanation != null" >
        apply_explanation = #{applyExplanation,jdbcType=VARCHAR},
      </if>
      <if test="authorizedAmount != null" >
        authorized_amount = #{authorizedAmount,jdbcType=REAL},
      </if>
      <if test="auditState != null" >
        audit_state = #{auditState,jdbcType=CHAR},
      </if>
      <if test="processExplanation != null" >
        process_explanation = #{processExplanation,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null" >
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null" >
        auditor_id = #{auditorId,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where apply_amount_id = #{applyAmountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.netloan.entity.member.MemberApplyAmount" >
    update t_member_apply_amount
    set member_id = #{memberId,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=CHAR},
      original_amount = #{originalAmount,jdbcType=REAL},
      apply_money = #{applyMoney,jdbcType=REAL},
      apply_explanation = #{applyExplanation,jdbcType=VARCHAR},
      authorized_amount = #{authorizedAmount,jdbcType=REAL},
      audit_state = #{auditState,jdbcType=CHAR},
      process_explanation = #{processExplanation,jdbcType=VARCHAR},
      apply_date = #{applyDate,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=VARCHAR},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where apply_amount_id = #{applyAmountId,jdbcType=VARCHAR}
  </update>
</mapper>